#!/bin/bash

. /etc/profile.d/rbenv.sh
BUNDLE=`which bundle`
. /opt/build-config

LOG_DIR=${LOG_DIR:-"/var/log/app"}
INSTALL_DIR=${INSTALL_DIR:-"/home/app"}
ADAPTER=kandan
HUBOT_CONF=/etc/supervisor/conf.d/hubot.conf

DB_HOST=${DB_HOST:-}
DB_PORT=${DB_PORT:-}
DB_NAME=${DB_NAME:-}
DB_USER=${DB_USER:-}
DB_PASS=${DB_PASS:-}
DB_POOL=${DB_POOL:-5}
DB_TYPE=${DB_TYPE:-}

# is a mysql or postgresql database linked?
# requires that the mysql or postgresql containers have exposed
# port 3306 and 5432 respectively.
if [ -n "${MYSQL_PORT_3306_TCP_ADDR}" ]; then
  DB_TYPE=mysql
  DB_HOST=${DB_HOST:-${MYSQL_PORT_3306_TCP_ADDR}}
  DB_PORT=${DB_PORT:-${MYSQL_PORT_3306_TCP_PORT}}

  # support for linked sameersbn/mysql image
  DB_USER=${DB_USER:-${MYSQL_ENV_DB_USER}}
  DB_PASS=${DB_PASS:-${MYSQL_ENV_DB_PASS}}
  DB_NAME=${DB_NAME:-${MYSQL_ENV_DB_NAME}}

  # support for linked orchardup/mysql and centurylink/mysql image
  DB_USER=${DB_USER:-${MYSQL_ENV_MYSQL_USER}}
  DB_PASS=${DB_PASS:-${MYSQL_ENV_MYSQL_PASSWORD}}
  DB_NAME=${DB_NAME:-${MYSQL_ENV_MYSQL_DATABASE}}
elif [ -n "${POSTGRESQL_PORT_5432_TCP_ADDR}" ]; then
  DB_TYPE=postgres
  DB_HOST=${DB_HOST:-${POSTGRESQL_PORT_5432_TCP_ADDR}}
  DB_PORT=${DB_PORT:-${POSTGRESQL_PORT_5432_TCP_PORT}}

  # support for linked official postgres image
  DB_USER=${DB_USER:-${POSTGRESQL_ENV_POSTGRES_USER}}
  DB_PASS=${DB_PASS:-${POSTGRESQL_ENV_POSTGRES_PASS}}
  DB_NAME=${DB_NAME:-${DB_USER}}

  # support for linked sameersbn/postgresql image
  DB_USER=${DB_USER:-${POSTGRESQL_ENV_DB_USER}}
  DB_PASS=${DB_PASS:-${POSTGRESQL_ENV_DB_PASS}}
  DB_NAME=${DB_NAME:-${POSTGRESQL_ENV_DB_NAME}}

  # support for linked orchardup/postgresql image
  DB_USER=${DB_USER:-${POSTGRESQL_ENV_POSTGRESQL_USER}}
  DB_PASS=${DB_PASS:-${POSTGRESQL_ENV_POSTGRESQL_PASS}}
  DB_NAME=${DB_NAME:-${POSTGRESQL_ENV_POSTGRESQL_DB}}

  # support for linked paintedfox/postgresql image
  DB_USER=${DB_USER:-${POSTGRESQL_ENV_USER}}
  DB_PASS=${DB_PASS:-${POSTGRESQL_ENV_PASS}}
  DB_NAME=${DB_NAME:-${POSTGRESQL_ENV_DB}}
fi

if [ -z "${DB_HOST}" ]; then
  echo "ERROR: "
  echo "  Please configure the database connection."
  echo "  Cannot continue without a database. Aborting..."
  exit 1
fi

# use default port number if it is still not set
case "${DB_TYPE}" in
  mysql) DB_PORT=${DB_PORT:-3306} ;;
  postgres) DB_PORT=${DB_PORT:-5432} ;;
  *)
    echo "ERROR: "
    echo "  Please specify the database type in use via the DB_TYPE configuration option."
    echo "  Accepted values are \"postgres\" or \"mysql\". Aborting..."
    exit 1
    ;;
esac

# set the default user and database
DB_NAME=${DB_NAME:-kandan_production}
DB_USER=${DB_USER:-root}

# configure database
case "${DB_TYPE}" in
  postgres)
     cat > ${INSTALL_DIR}/kandan/config/database.yml << __EOL0__
production:
  adapter: postgresql
  timeout: 5000
  database: ${DB_NAME}
  host: ${DB_HOST}
  port: ${DB_PORT}
  pool: ${DB_POOL}
  username: ${DB_USER}
  password: ${DB_PASS}
__EOL0__
     ;;
  mysql)

     cat > ${INSTALL_DIR}/kandan/config/database.yml << __EOL1__
production:
  adapter: mysql2
  reconnect: false
  timeout: 5000
  database: ${DB_NAME}
  host: ${DB_HOST}
  port: ${DB_PORT}
  pool: ${DB_POOL}
  username: ${DB_USER}
  password: ${DB_PASS}
__EOL1__
    ;;
  *)
    echo "Invalid database type: '$DB_TYPE'. Supported choices: [mysql, postgres]."
    exit 1
    ;;
esac

cd ${INSTALL_DIR}/kandan
sudo -u kandan -E -H ${BUNDLE} exec rake db:create db:migrate kandan:bootstrap RAILS_ENV=production
sudo -u kandan -E -H ${BUNDLE} exec rake assets:precompile RAILS_ENV=production
sudo -u kandan -E -H ${BUNDLE} exec rake kandan:boot_hubot RAILS_ENV=production
sudo -u kandan -E -H ${BUNDLE} exec rake kandan:hubot_access_key RAILS_ENV=production | grep -oP "(?<=Your hubot access key is )[^ ]*" > hubot-key

HUBOT_KANDAN_TOKEN=`cat ${INSTALL_DIR}/kandan/hubot-key`
HUBOT_KANDAN_HOST=localhost
HUBOT_KANDAN_PORT=3000

echo "environment=" >> ${HUBOT_CONF}
echo "  HUBOT_KANDAN_TOKEN=\"${HUBOT_KANDAN_TOKEN}\"," >> ${HUBOT_CONF}
echo "  HUBOT_KANDAN_PORT=${HUBOT_KANDAN_PORT}," >> ${HUBOT_CONF}
echo "  HUBOT_KANDAN_HOST=${HUBOT_KANDAN_HOST}," >> ${HUBOT_CONF}
echo "  HUBOT_LOG_LEVEL=debug" >> ${HUBOT_CONF}

appStart () {
  # update adapter
  sed -ri "s|/bin/hubot -a .*$|/bin/hubot -a ${ADAPTER}/g" /etc/supervisor/hubot.conf
  # start supervisord
  exec /usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf
}

appHelp () {
  echo "Available options:"
  echo " app:start          - Starts the server (default)"
  echo " app:help           - Displays the help"
  echo " [command]          - Execute the specified linux command eg. bash."
}

case "$1" in
  app:start)
    appStart
    ;;
  app:help)
    appHelp
    ;;
  *)
    if [ -x $1 ]; then
      $1
    else
      prog=$(which $1)
      if [ -n "${prog}" ] ; then
        shift 1
        $prog $@
      else
        appHelp
      fi
    fi
    ;;
esac

exit 0
